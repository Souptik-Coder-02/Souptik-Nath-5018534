Bubble Sort: Repeatedly swaps adjacent elements if they are in the wrong order. Time complexity is O(n²) in both average and worst cases.

Insertion Sort: Builds the final sorted array one item at a time, by repeatedly picking the next item and inserting it into the correct position. Time complexity is O(n²) in average and worst cases.

Quick Sort: Uses a divide-and-conquer approach by selecting a 'pivot' and partitioning the array into elements less than the pivot and elements greater than the pivot. Time complexity is O(n log n) on average and O(n²) in the worst case.

Merge Sort: Also uses divide-and-conquer by dividing the array into halves, sorting each half, and then merging the sorted halves. Time complexity is O(n log n) in both average and worst cases.